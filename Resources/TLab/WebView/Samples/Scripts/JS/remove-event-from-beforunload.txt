window.onbeforeunload = null;

const removeUnloadListeners = () => {
    const eventListeners = window.getEventListeners?.(window);
    if (eventListeners?.beforeunload) {
        eventListeners.beforeunload.forEach(listener => {
            window.removeEventListener('beforeunload', listener.listener);
        });
    }
};

removeUnloadListeners?.();

window.onbeforeunload = function() {
    console.log("Blocked a 'beforeunload' ...");
    event.stopImmediatePropagation();
};

const originalAddEventListener = window.addEventListener;
window.addEventListener = function (type, listener, options) {
    if (type === 'beforeunload') {
        console.warn("Blocked a 'beforeunload' listener from being added.");
        return;
    }
    originalAddEventListener.call(this, type, listener, options);
};